{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid contain\\\">\\n    <div class=\\\"row row1\\\">\\n        <div class=\\\"col-6\\\">\\n\\n        </div>\\n        <div class=\\\"col-6\\\">\\n\\n        <button (click)=\\\"startTimer1()\\\">start</button>\\n        <h5><span id=\\\"time\\\" class=\\\"text-primary\\\">00:00</span></h5>\\n        </div>\\n\\n    </div>\\n  <div class=\\\"row row2\\\">\\n      <div class=\\\"col-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <textarea class=\\\"form-control testarea\\\" rows=\\\"25\\\"></textarea>\\n            </div>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <textarea class=\\\"form-control testarea\\\" rows=\\\"25\\\" [disabled]=\\\"disa\\\"></textarea>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit, ElementRef, AfterViewInit } from '@angular/core';\nimport { interval  } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'typing';\n  disa: Boolean = false;\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit() {\n      /*const callDuration = this.elementRef.nativeElement.querySelector('#time');\n    this.startTimer(callDuration);*/\n  }\n  startTimer1() {\n    const callDuration = this.elementRef.nativeElement.querySelector('#time');\n    this.startTimer(callDuration);\n  }\n\n  startTimer(display) {\n    let timer = 60;\n    let minutes;\n    let seconds;\n      interval(1000).subscribe(x => {\n          minutes = Math.floor(timer / 60);\n          seconds = Math.floor(timer % 60);\n\n          minutes = minutes < 10 ? \"0\" + minutes : minutes;\n          seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          display.textContent = minutes + \":\" + seconds;\n\n          --timer;\n          if (--timer < 0) {\n               console.log('timeup');\n               display.textContent = \"00:00\";\n               this.disa = true;\n          }\n      });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}